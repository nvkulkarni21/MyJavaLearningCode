package Assignment;
//65,72,23,36,99,20,1,44
//3,1,4,1,5,9,2,6,5,3
import java.util.Arrays;
import java.util.Scanner;

public class QuickSort {

    int inputCount;

    public static void main(String[] args){

        int[] arrVal;
        QuickSort QuickSortObj = new QuickSort();
        arrVal = QuickSortObj.QuickSort();

        QuickSortObj.printArray(arrVal);

        sort(arrVal);

    }

    public int[] QuickSort() {
        System.out.println("Enter the number of integers to be sorted");
        Scanner inputCountObj = new Scanner(System.in);
        this.inputCount = inputCountObj.nextInt();
        int[] inputArr = new int[inputCount];
        System.out.println("Enter you numbers required to be sorted\n");
        Scanner inputVal = new Scanner(System.in);
        for (int i = 0 ; i < this.inputCount ; i ++){
            int intValue = inputVal.nextInt();
            inputArr [i] =intValue;
        }
        //System.out.println("Array value is =" + Arrays.toString(inputArr));
        return inputArr;
    }

    public void printArray(int[] iArray){
        //System.out.println("Length of array is " + iArray.length);

        for (int i=0;i < iArray.length;i++ ){
            if (i < iArray.length){
                System.out.print(iArray[i] + ",");
            }
            else
                System.out.print(iArray[i] + ",");
            //System.out.print("Array value is .. ");

            //System.out.println(iArray[i]);
        }
    }

    public int findPivot(int[] inputArr,String pivotLoc){

        int Pivot=0;
        if (pivotLoc == "L") {
            Pivot = 0 ; //inputArr[0]; //.length / 2;
        }
        else if (pivotLoc == "R"){
            Pivot = inputArr.length;
        }
        else if (pivotLoc == "M")
            Pivot = inputArr.length/2;

        return Pivot;
    }
    int partition(int[] arrint , int pivot){

        int partIndex=0;

        System.out.println("\nIn partitionining..");
        int openNum=arrint[1], closedNum=pivot;
        for (int i=1;i<arrint.length;i++){
            //for (int j=1;j<arrint.length-1;j++){

                    int tempSwap=0;
                    if(arrint[i] < arrint[pivot] ){

                    System.out.println("\nThe number " + arrint[i] + " is smaller than pivot " + arrint[pivot] );
                    tempSwap=arrint[i];
                    arrint[i]=openNum;
                    //arrint[i]=tempSwap;
                    //openNum = tempSwap;
                    System.out.println("So, the intergers " + arrint[i]  + " and " + tempSwap +" are swapped.");
                    closedNum=tempSwap;


                    System.out.println("Now open number is : " + openNum + " . And closed numnber is : " + closedNum);
                    //arrVal[i]=0;
                }
                else {
                    openNum=arrint[i];
                    System.out.println("\nNumber " + arrint[i] +" is greater than pivot " + arrint[pivot] +". So no action taken.");
                    System.out.println("Now open number is : " + openNum + " . And closed numnber is : " + closedNum);
                }
                if (arrint[i] == arrint.length){
                    int tempVar=pivot;
                    pivot=closedNum;
                    closedNum=tempVar;

                    System.out.println("\nLast element in the array. Pivot swapped with the last closed item : " + pivot);
                    System.out.println("Now pivot is : " + closedNum);

                }//}
        }
        System.out.println("\nNow sorted array is ");
        printArray(arrint);
        return partIndex;
    }
    public static void sort(int[] arrVal){

        QuickSort Obj = new QuickSort();
        //L = Left pivot, R=Righmost pivot , M - Midpivot
        int pivot =  Obj.findPivot(arrVal,"L");
        System.out.println("\nPivot is at index = " + pivot);

        int partIn = Obj.partition(arrVal,pivot);

    }
}
